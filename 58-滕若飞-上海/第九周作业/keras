from tensorflow.keras.datasets import mnist
from tensorflow.keras import models, layers
from tensorflow.keras.utils import to_categorical
import matplotlib.pyplot as plt

(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

print('train_images.shape = ', train_images.shape)
print('tran_labels = ', train_labels)
print('test_images.shape = ', test_images.shape)
print('test_labels', test_labels)


imagetestshow100 = test_images[100]
plt.imshow(imagetestshow100, cmap=plt.cm.binary)
plt.show()

imagetrainshow100 = train_images[100]
plt.imshow(imagetrainshow100, cmap=plt.cm.binary)
plt.show()

'''
创建神经网络
'''
network = models.Sequential()
network.add(layers.Dense(512, activation='relu', input_shape=(28*28,)))
network.add(layers.Dense(10, activation='softmax'))

network.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])
'''
数据处理
'''
train_images = train_images.reshape(60000, 28*28)
train_images = train_images.astype('float32') / 255
test_images = test_images.reshape(10000, 28*28)
test_images = test_images.astype('float32') / 255

'''
图片标签分类
'''
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

'''
训练
'''
network.fit(train_images, train_labels, epochs=5, batch_size = 128)

'''
统计训练结果
'''
test_loss, test_acc = network.evaluate(test_images, test_labels, verbose=1)

'''
效果测试
'''
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
digit = test_images[1]
plt.imshow(digit, cmap=plt.cm.binary)
plt.show()
test_images = test_images.reshape((10000, 28*28))
res = network.predict(test_images)

for i in range(res[1].shape[0]):
    if (res[1][i] == 1):
        print("the number for the picture is : ", i)
        break

